group 'org.peergos'
version '0.1'

apply plugin: "java"
apply plugin: 'com.google.osdetector'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.4.0'
    }

}


repositories {
    mavenCentral()

}


compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

[compileJava, compileTestJava].each() {
    it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options"]
    it.options.encoding = "UTF-8"
}


javadoc.options {
    encoding = 'UTF-8'
    links 'https://docs.oracle.com/javase/8/docs/api/'
}


test {
    testLogging {
        exceptionFormat = 'full'
        showExceptions true
        showCauses true
        showStackTraces true
    }
    maxParallelForks = Runtime.runtime.availableProcessors()

}

dependencies {
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'junit:junit:4.12'
}

task buildNativeHeaders(type: Exec) {
    def classpath = sourceSets.main.output.classesDir

    commandLine "javah", "-d", "build/jniheaders", "-classpath", "$classpath", "org.peergos.crypto.JniTweetNacl"

    dependsOn classes
}



task compileNativeLib(type: Exec) {

    def jniPath;
    if (osdetector.os.equalsIgnoreCase("linux")) {
        jniPath = "linux"
    }
    if (osdetector.os.equalsIgnoreCase("osx")) {
        jniPath = "darwin"
    }

    commandLine "gcc", "-Wimplicit-function-declaration", "-fPIC", "-std=c11", "-I${System.env.JAVA_HOME}/include",
            "-I${System.env.JAVA_HOME}/include/${jniPath}", "-Isrc/main/jnilibs", "-Isrc/main/jni", "-shared", "-Ibuild/jniheaders",
            "-o build/libtweetnacl.so", "src/main/jni/org_peergos_crypto_JniTweetNacl.c"

    dependsOn buildNativeHeaders

}
